{"version":3,"sources":["utils/cats-api.util.js","components/SmallSpin/index.js","components/SmallSpin/SmallSpin.jsx","components/Cats/index.js","components/Cats/Cats.jsx","utils/constants.js","router/App.jsx","reportWebVitals.js","index.js"],"names":["checkResponse","response","ok","json","Promise","reject","SmallSpin","className","Cats","React","useState","cats","setCats","isSmall","setIsSmall","isFetching","setIsFetching","useEffect","count","path","params","limit","fetch","stringify","method","parameters","then","fetchCats","notification","success","message","description","catch","e","console","error","finally","imageClassNames","useMemo","classNames","image","onClick","prevState","grid","gutter","column","dataSource","renderItem","item","Item","title","height","once","src","url","alt","App","exact","to","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAiBMA,EAAgB,SAACC,GAAD,OAAcA,EAASC,GAAKD,EAASE,OAASC,QAAQC,OAAO,iG,yBCfpEC,ECGG,WACd,OACI,qBAAKC,UAAU,kBAAf,SACI,cAAC,IAAD,O,gBCNGC,G,OCQF,WAAO,IAAD,EACSC,IAAMC,SAAS,IADxB,mBACRC,EADQ,KACFC,EADE,OAEeH,IAAMC,UAAS,GAF9B,mBAERG,EAFQ,KAECC,EAFD,OAGqBL,IAAMC,UAAS,GAHpC,mBAGRK,EAHQ,KAGIC,EAHJ,KAKfP,IAAMQ,WAAU,WACZD,GAAc,GJbG,SAACE,EAAOC,GAC7B,IAAMC,EAAS,CACXC,MAAOH,GAGX,OAAOI,MAAM,GAAD,OKRQ,gCLQR,OAAeH,EAAf,YAAuBI,oBAAUH,IAAW,CACpDI,OAAQ,MACRC,WAAY,CACRJ,MAAOH,KAGdQ,KAAK1B,GIGF2B,CAAU,IAAK,kBACVD,MAAK,SAACzB,GACH2B,IAAaC,QAAQ,CACjBC,QAAS,wFACTC,YAAa,2IAEjBnB,EAAQX,MAEX+B,OAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,MAC3BG,SAAQ,kBAAMpB,GAAc,QAClC,IAEH,IAIMqB,EAAkB5B,IAAM6B,SAAQ,WAClC,OAAOC,IAAW,CACdC,OAAO,EACP,YAAe3B,MAEpB,CAACA,IAEJ,OAAIE,EACO,cAAC,EAAD,IAIP,qCACI,cAAC,IAAD,CAAQ0B,QAjBQ,WACpB3B,GAAY,SAAA4B,GAAS,OAAKA,MAgBtB,mGACA,cAAC,IAAD,CACIC,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAYnC,EACZoC,WAAY,SAAAC,GAAI,OACZ,cAAC,IAAKC,KAAN,UACI,cAAC,IAAD,CAAMC,MAAOF,EAAKE,MAAlB,SACI,cAAC,IAAD,CAAUC,OAAQ,IAAKC,MAAI,EAAC7C,UAAU,UAAtC,SACI,qBACIA,UAAW8B,EACXgB,IAAKL,EAAKM,IACVC,IAAI,0HEnCzBC,MAjBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACtC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUuC,GAAG,YAEf,cAAC,IAAD,CAAOvC,KAAK,QAAQwC,UAAWnD,IAC/B,cAAC,IAAD,CAAOW,KAAK,YAAZ,uFAGA,cAAC,IAAD,CAAOA,KAAK,IAAZ,qBCHSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,0BCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.f4d509d2.chunk.js","sourcesContent":["import { stringify } from \"querystring\";\nimport { BASE_URL } from \"./constants\";\n\nexport const fetchCats = (count, path) => {\n    const params = {\n        limit: count\n    };\n\n    return fetch(`${BASE_URL}${path}?${stringify(params)}`, {\n        method: 'GET',\n        parameters: {\n            limit: count\n        }\n    })\n    .then(checkResponse)\n};\n\nconst checkResponse = (response) => response.ok ? response.json() : Promise.reject(\"Ошибка на сервере\");\n","import SmallSpin from './SmallSpin';\n\nexport default SmallSpin;\n","import React from 'react';\nimport {Spin} from \"antd\";\n\nimport './SmallSpin.css';\n\nconst SmallSpin = () => {\n    return (\n        <div className=\"spinner-wrapper\">\n            <Spin />\n        </div>\n    )\n};\n\nexport default SmallSpin;\n","import Cats from './Cats';\n\nexport default Cats;\n","import React from 'react';\nimport {Button, Card, List, notification} from 'antd';\nimport LazyLoad from 'react-lazyload';\nimport {fetchCats} from \"../../utils/cats-api.util\";\nimport SmallSpin from \"../SmallSpin\";\n\nimport classNames from 'classnames';\n\nimport './Cats.css';\n\nconst Cats = () => {\n    const [cats, setCats] = React.useState([]);\n    const [isSmall, setIsSmall] = React.useState(false);\n    const [isFetching, setIsFetching] = React.useState(false);\n\n    React.useEffect(() => {\n        setIsFetching(true);\n        fetchCats(100, '/images/search')\n            .then((response) => {\n                notification.success({\n                    message: 'Статус загрузки',\n                    description: 'Коты загрузились успешно',\n                });\n                setCats(response);\n            })\n            .catch((e) => console.error(e))\n            .finally(() => setIsFetching(false))\n    }, []);\n\n    const toggleSizeImage = () => {\n        setIsSmall((prevState => !prevState));\n    }\n\n    const imageClassNames = React.useMemo(() => {\n        return classNames({\n            image: true,\n            'image_small': isSmall\n        });\n    }, [isSmall])\n\n    if (isFetching) {\n        return <SmallSpin />\n    }\n\n    return (\n        <>\n            <Button onClick={toggleSizeImage}>Поменять размер</Button>\n            <List\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={cats}\n                renderItem={item => (\n                    <List.Item>\n                        <Card title={item.title}>\n                            <LazyLoad height={200} once className=\"wrapper\">\n                                <img\n                                    className={imageClassNames}\n                                    src={item.url}\n                                    alt=\"Изображение котика\"\n                                />\n                            </LazyLoad>\n                        </Card>\n                    </List.Item>\n                )}\n            />\n        </>\n    );\n};\n\nexport default Cats;\n","export const BASE_URL = 'https://api.thecatapi.com/v1';\n","import './App.css';\n\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport Cats from '../components/Cats';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/cats\" />\n      </Route>\n      <Route path=\"/cats\" component={Cats} />\n      <Route path=\"/cats/:id\">\n        Страница кота\n      </Route>\n      <Route path=\"*\">\n        404\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './router/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Layout } from \"antd\";\n\nimport 'antd/dist/antd.css';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Layout>\n              <App />\n          </Layout>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}